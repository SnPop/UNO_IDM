/**
 * generated by Xtext 2.23.0
 */
package org.example.myunodsl.myunodsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.example.myunodsl.myunodsl.Contestations;
import org.example.myunodsl.myunodsl.MyunodslPackage;
import org.example.myunodsl.myunodsl.Penalite;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Penalite</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.example.myunodsl.myunodsl.impl.PenaliteImpl#getPenalites <em>Penalites</em>}</li>
 *   <li>{@link org.example.myunodsl.myunodsl.impl.PenaliteImpl#getCi <em>Ci</em>}</li>
 *   <li>{@link org.example.myunodsl.myunodsl.impl.PenaliteImpl#getContestation <em>Contestation</em>}</li>
 *   <li>{@link org.example.myunodsl.myunodsl.impl.PenaliteImpl#getTpsl <em>Tpsl</em>}</li>
 *   <li>{@link org.example.myunodsl.myunodsl.impl.PenaliteImpl#getLtps <em>Ltps</em>}</li>
 *   <li>{@link org.example.myunodsl.myunodsl.impl.PenaliteImpl#getPenalite <em>Penalite</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PenaliteImpl extends MinimalEObjectImpl.Container implements Penalite
{
  /**
   * The default value of the '{@link #getPenalites() <em>Penalites</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPenalites()
   * @generated
   * @ordered
   */
  protected static final String PENALITES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPenalites() <em>Penalites</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPenalites()
   * @generated
   * @ordered
   */
  protected String penalites = PENALITES_EDEFAULT;

  /**
   * The default value of the '{@link #getCi() <em>Ci</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCi()
   * @generated
   * @ordered
   */
  protected static final String CI_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCi() <em>Ci</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCi()
   * @generated
   * @ordered
   */
  protected String ci = CI_EDEFAULT;

  /**
   * The cached value of the '{@link #getContestation() <em>Contestation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContestation()
   * @generated
   * @ordered
   */
  protected Contestations contestation;

  /**
   * The default value of the '{@link #getTpsl() <em>Tpsl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTpsl()
   * @generated
   * @ordered
   */
  protected static final String TPSL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTpsl() <em>Tpsl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTpsl()
   * @generated
   * @ordered
   */
  protected String tpsl = TPSL_EDEFAULT;

  /**
   * The default value of the '{@link #getLtps() <em>Ltps</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLtps()
   * @generated
   * @ordered
   */
  protected static final String LTPS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLtps() <em>Ltps</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLtps()
   * @generated
   * @ordered
   */
  protected String ltps = LTPS_EDEFAULT;

  /**
   * The default value of the '{@link #getPenalite() <em>Penalite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPenalite()
   * @generated
   * @ordered
   */
  protected static final String PENALITE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPenalite() <em>Penalite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPenalite()
   * @generated
   * @ordered
   */
  protected String penalite = PENALITE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PenaliteImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyunodslPackage.Literals.PENALITE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPenalites()
  {
    return penalites;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPenalites(String newPenalites)
  {
    String oldPenalites = penalites;
    penalites = newPenalites;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyunodslPackage.PENALITE__PENALITES, oldPenalites, penalites));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCi()
  {
    return ci;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCi(String newCi)
  {
    String oldCi = ci;
    ci = newCi;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyunodslPackage.PENALITE__CI, oldCi, ci));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Contestations getContestation()
  {
    return contestation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContestation(Contestations newContestation, NotificationChain msgs)
  {
    Contestations oldContestation = contestation;
    contestation = newContestation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyunodslPackage.PENALITE__CONTESTATION, oldContestation, newContestation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContestation(Contestations newContestation)
  {
    if (newContestation != contestation)
    {
      NotificationChain msgs = null;
      if (contestation != null)
        msgs = ((InternalEObject)contestation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyunodslPackage.PENALITE__CONTESTATION, null, msgs);
      if (newContestation != null)
        msgs = ((InternalEObject)newContestation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyunodslPackage.PENALITE__CONTESTATION, null, msgs);
      msgs = basicSetContestation(newContestation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyunodslPackage.PENALITE__CONTESTATION, newContestation, newContestation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTpsl()
  {
    return tpsl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTpsl(String newTpsl)
  {
    String oldTpsl = tpsl;
    tpsl = newTpsl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyunodslPackage.PENALITE__TPSL, oldTpsl, tpsl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLtps()
  {
    return ltps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLtps(String newLtps)
  {
    String oldLtps = ltps;
    ltps = newLtps;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyunodslPackage.PENALITE__LTPS, oldLtps, ltps));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPenalite()
  {
    return penalite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPenalite(String newPenalite)
  {
    String oldPenalite = penalite;
    penalite = newPenalite;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyunodslPackage.PENALITE__PENALITE, oldPenalite, penalite));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyunodslPackage.PENALITE__CONTESTATION:
        return basicSetContestation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyunodslPackage.PENALITE__PENALITES:
        return getPenalites();
      case MyunodslPackage.PENALITE__CI:
        return getCi();
      case MyunodslPackage.PENALITE__CONTESTATION:
        return getContestation();
      case MyunodslPackage.PENALITE__TPSL:
        return getTpsl();
      case MyunodslPackage.PENALITE__LTPS:
        return getLtps();
      case MyunodslPackage.PENALITE__PENALITE:
        return getPenalite();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyunodslPackage.PENALITE__PENALITES:
        setPenalites((String)newValue);
        return;
      case MyunodslPackage.PENALITE__CI:
        setCi((String)newValue);
        return;
      case MyunodslPackage.PENALITE__CONTESTATION:
        setContestation((Contestations)newValue);
        return;
      case MyunodslPackage.PENALITE__TPSL:
        setTpsl((String)newValue);
        return;
      case MyunodslPackage.PENALITE__LTPS:
        setLtps((String)newValue);
        return;
      case MyunodslPackage.PENALITE__PENALITE:
        setPenalite((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyunodslPackage.PENALITE__PENALITES:
        setPenalites(PENALITES_EDEFAULT);
        return;
      case MyunodslPackage.PENALITE__CI:
        setCi(CI_EDEFAULT);
        return;
      case MyunodslPackage.PENALITE__CONTESTATION:
        setContestation((Contestations)null);
        return;
      case MyunodslPackage.PENALITE__TPSL:
        setTpsl(TPSL_EDEFAULT);
        return;
      case MyunodslPackage.PENALITE__LTPS:
        setLtps(LTPS_EDEFAULT);
        return;
      case MyunodslPackage.PENALITE__PENALITE:
        setPenalite(PENALITE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyunodslPackage.PENALITE__PENALITES:
        return PENALITES_EDEFAULT == null ? penalites != null : !PENALITES_EDEFAULT.equals(penalites);
      case MyunodslPackage.PENALITE__CI:
        return CI_EDEFAULT == null ? ci != null : !CI_EDEFAULT.equals(ci);
      case MyunodslPackage.PENALITE__CONTESTATION:
        return contestation != null;
      case MyunodslPackage.PENALITE__TPSL:
        return TPSL_EDEFAULT == null ? tpsl != null : !TPSL_EDEFAULT.equals(tpsl);
      case MyunodslPackage.PENALITE__LTPS:
        return LTPS_EDEFAULT == null ? ltps != null : !LTPS_EDEFAULT.equals(ltps);
      case MyunodslPackage.PENALITE__PENALITE:
        return PENALITE_EDEFAULT == null ? penalite != null : !PENALITE_EDEFAULT.equals(penalite);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (penalites: ");
    result.append(penalites);
    result.append(", ci: ");
    result.append(ci);
    result.append(", tpsl: ");
    result.append(tpsl);
    result.append(", ltps: ");
    result.append(ltps);
    result.append(", penalite: ");
    result.append(penalite);
    result.append(')');
    return result.toString();
  }

} //PenaliteImpl
