/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.mydsl.myUnoDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myUnoDsl.Cartes;
import org.xtext.example.mydsl.myUnoDsl.Deroulement;
import org.xtext.example.mydsl.myUnoDsl.MyUnoDslPackage;
import org.xtext.example.mydsl.myUnoDsl.Penalite;
import org.xtext.example.mydsl.myUnoDsl.Piocher;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Deroulement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myUnoDsl.impl.DeroulementImpl#getPiocher <em>Piocher</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myUnoDsl.impl.DeroulementImpl#getCartes <em>Cartes</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myUnoDsl.impl.DeroulementImpl#getPen <em>Pen</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DeroulementImpl extends MinimalEObjectImpl.Container implements Deroulement
{
  /**
   * The cached value of the '{@link #getPiocher() <em>Piocher</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPiocher()
   * @generated
   * @ordered
   */
  protected Piocher piocher;

  /**
   * The cached value of the '{@link #getCartes() <em>Cartes</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCartes()
   * @generated
   * @ordered
   */
  protected Cartes cartes;

  /**
   * The cached value of the '{@link #getPen() <em>Pen</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPen()
   * @generated
   * @ordered
   */
  protected EList<Penalite> pen;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DeroulementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyUnoDslPackage.Literals.DEROULEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Piocher getPiocher()
  {
    return piocher;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPiocher(Piocher newPiocher, NotificationChain msgs)
  {
    Piocher oldPiocher = piocher;
    piocher = newPiocher;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUnoDslPackage.DEROULEMENT__PIOCHER, oldPiocher, newPiocher);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPiocher(Piocher newPiocher)
  {
    if (newPiocher != piocher)
    {
      NotificationChain msgs = null;
      if (piocher != null)
        msgs = ((InternalEObject)piocher).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUnoDslPackage.DEROULEMENT__PIOCHER, null, msgs);
      if (newPiocher != null)
        msgs = ((InternalEObject)newPiocher).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUnoDslPackage.DEROULEMENT__PIOCHER, null, msgs);
      msgs = basicSetPiocher(newPiocher, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUnoDslPackage.DEROULEMENT__PIOCHER, newPiocher, newPiocher));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Cartes getCartes()
  {
    return cartes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCartes(Cartes newCartes, NotificationChain msgs)
  {
    Cartes oldCartes = cartes;
    cartes = newCartes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyUnoDslPackage.DEROULEMENT__CARTES, oldCartes, newCartes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCartes(Cartes newCartes)
  {
    if (newCartes != cartes)
    {
      NotificationChain msgs = null;
      if (cartes != null)
        msgs = ((InternalEObject)cartes).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyUnoDslPackage.DEROULEMENT__CARTES, null, msgs);
      if (newCartes != null)
        msgs = ((InternalEObject)newCartes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyUnoDslPackage.DEROULEMENT__CARTES, null, msgs);
      msgs = basicSetCartes(newCartes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUnoDslPackage.DEROULEMENT__CARTES, newCartes, newCartes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Penalite> getPen()
  {
    if (pen == null)
    {
      pen = new EObjectContainmentEList<Penalite>(Penalite.class, this, MyUnoDslPackage.DEROULEMENT__PEN);
    }
    return pen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyUnoDslPackage.DEROULEMENT__PIOCHER:
        return basicSetPiocher(null, msgs);
      case MyUnoDslPackage.DEROULEMENT__CARTES:
        return basicSetCartes(null, msgs);
      case MyUnoDslPackage.DEROULEMENT__PEN:
        return ((InternalEList<?>)getPen()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyUnoDslPackage.DEROULEMENT__PIOCHER:
        return getPiocher();
      case MyUnoDslPackage.DEROULEMENT__CARTES:
        return getCartes();
      case MyUnoDslPackage.DEROULEMENT__PEN:
        return getPen();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyUnoDslPackage.DEROULEMENT__PIOCHER:
        setPiocher((Piocher)newValue);
        return;
      case MyUnoDslPackage.DEROULEMENT__CARTES:
        setCartes((Cartes)newValue);
        return;
      case MyUnoDslPackage.DEROULEMENT__PEN:
        getPen().clear();
        getPen().addAll((Collection<? extends Penalite>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyUnoDslPackage.DEROULEMENT__PIOCHER:
        setPiocher((Piocher)null);
        return;
      case MyUnoDslPackage.DEROULEMENT__CARTES:
        setCartes((Cartes)null);
        return;
      case MyUnoDslPackage.DEROULEMENT__PEN:
        getPen().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyUnoDslPackage.DEROULEMENT__PIOCHER:
        return piocher != null;
      case MyUnoDslPackage.DEROULEMENT__CARTES:
        return cartes != null;
      case MyUnoDslPackage.DEROULEMENT__PEN:
        return pen != null && !pen.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //DeroulementImpl
